var searchIndex = JSON.parse('{\
"mdrc_pacbot_util":{"doc":"Utilities for writing blazingly fast Pacbot code","t":"AAAAAAAAAAAADDLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLMLMLMLMLLLLLLLLLLLLLLLMMLLMLMLLLLLLLLLLLLLLRRRRRRRRRRRDNNNDEENDNNNMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLMLLLLLLMLLLLLLLLLLLLLLLMMMLLLLLLLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLLMMLMMMMLLMLMLLLLLLLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLDENRRGENNNNNDLLLLLLLLLLLLLLLLLNLLLLLLLLLMLLLLLLLLLLLLLMLLLLNLLLLLLFLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLMNLLLNLMLMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMFLLLLLLMLMDEENNNLMLLLLLLLLLLLLLLLLALLLLLLLLLLLFLLLLLLLLLLLLLAMMLLLLLLLLLLLLLLLLLLMLLMMMMMAMMFAMMLMFMLMMLLLLLLLLALLLLLLLLLLLLLALLLRRRRRRRRRRRRRDMLLLLLLLLLLLLLLLLLLMFLLLLLLLLDLLLLLLLLLLLLLLLLLLLLMMMMMFLMLLLLLLLDLLLLLLLLLLLLLLLMMMMLLLLLLDLLLLLLLLLLLLLLLLLLLLLMMMMLLLLLLLFFFRRDLLLLMLMMLLLLLLLLLLMLMLLLLLMMMLLAMLLLMMMMMMMLLLLLLLLLDDLLLLLMLLLLLLLLLLMLLMMLLLLMMMLLLLLLLLLLLLLLMLMMMMLLLMMLLLLLLLLLLLLLNNDDEMLLLLLLLLLLLLLLLLLLLMMLLLLLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMLLMLLLLLMMLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLDDDDDLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMLMLLLLLLLLLLMLLLLLLLLLLLLLLLMLLLLLLLLLLMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMMMMLMMMMLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLMNRRRRNNNELLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLLAADLLLLLLLLLMLLMLLLLLLLLMMLLLLLLDLLLLLLLLLLLLLLLLLMMLLMMMMLLLLLLL","n":["agent_setup","constants","game_state","ghost","grid","gui","network","physics","replay","robot","standard_grids","util","GhostSetup","PacmanAgentSetup","as_any","as_any","as_any_mut","as_any_mut","borrow","borrow","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","color","default","deref","deref","deref_mut","deref_mut","deserialize","deserialize","drop","drop","eq","eq","equivalent","fmt","fmt","from","from","from_subset","from_subset","ghost_home_pos","ghost_home_pos","ghost_respawn_path","ghost_respawn_path","ghosts","ghosts","grid","grid","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","new","null_value","pacman_start","pacman_start","scatter_point","serialize","serialize","start_path","state_swap_times","state_swap_times","to_owned","to_owned","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","vzip","vzip","FRIGHTENED_LENGTH","GHOST_SCORE","GUI_PARTICLE_FILTER_POINTS","NUM_PARTICLE_FILTER_BODIES","NUM_PARTICLE_FILTER_POINTS","PARTICLE_FILTER_ELITE","PARTICLE_FILTER_PURGE","PARTICLE_FILTER_RANDOM","PELLET_SCORE","POWER_PELLET_SCORE","STARTING_LIVES","Agent","Blue","Chase","Frightened","Ghost","GhostMode","GhostType","Orange","PacmanState","Pink","Red","Scatter","agent","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","check_if_ghost_eaten","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","color","default","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","deserialize","die","direction","direction","distance","drop","drop","drop","drop","drop","elapsed_time","eq","eq","eq","eq","eq","equivalent","equivalent","equivalent","equivalent","equivalent","fmt","fmt","fmt","fmt","fmt","frightened_counter","frightened_counter","frightened_multiplier","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","get_frightened_move","get_move_based_on","get_next_blue_chase_move","get_next_chase_move","get_next_orange_chase_move","get_next_pink_chase_move","get_next_red_chase_move","get_next_scatter_move","get_respawn_path_move","get_swapped_state_move","ghosts","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_game_over","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","just_swapped_state","lives","location","mode","new","null_value","old_mode","pacman","pause","paused","pellets","power_pellets","previous_location","reset","respawn_agents","respawn_timer","resume","score","send_home","serialize","serialize","serialize","serialize","serialize","should_die","start_counter","state_counter","step","step_ghost","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","update_ghosts","update_pacman","update_score","vzip","vzip","vzip","vzip","vzip","ComputedGrid","Direction","Down","GRID_HEIGHT","GRID_WIDTH","Grid","GridValue","I","Left","O","Right","Up","Wall","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","at","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","c","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","coords_to_node","coords_to_node","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","deserialize","dist","distance_matrix","drop","drop","drop","drop","e","eq","eq","eq","eq","equivalent","equivalent","facing_direction","fmt","fmt","fmt","fmt","from","from","from","from","from_subset","from_subset","from_subset","from_subset","get_rotation","grid","grid","init","init","init","init","into","into","into","into","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","left_bottom","n","neighbors","next","node_nearest","o","pellet_count","pellet_count","power_pellets","power_pellets","right_top","serialize","serialize","serialize","serialize","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from_primitive","try_from_primitive","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","valid_actions","valid_actions","validate_grid","vzip","vzip","vzip","vzip","walkable","walkable_nodes","walkable_nodes","walls","walls","App","AppMode","GameServer","Playback","Recording","Simulated","add_grid_variants","agent_setup","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone_into","clone_into","colors","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","draw_grid","draw_pacman_state","draw_replay_ui","draw_simulation","draw_stopwatch","drop","drop","drop","eq","eq","equivalent","equivalent","from","from","from","from_subset","from_subset","from_subset","game","grid","gui_stopwatch","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","load_replay","mode","new_replay_manager","null_value","pacman_render","pacman_state_notify_recv","pf_stopwatch","phys_render","phys_restart_send","physics","physics_stopwatch","pointer_pos","pretty_print_time_now","replay_manager","replay_manager","replay_pacman","reset_replay","robot","run_gui","save_pacbot_location","save_replay","selected_grid","target_velocity","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","transforms","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update","update_replay_manager","update_target_velocity","update_with_replay","utils","vzip","vzip","vzip","GHOST_BLUE_COLOR","GHOST_ORANGE_COLOR","GHOST_PINK_COLOR","GHOST_RED_COLOR","PACMAN_COLOR","PACMAN_DISTANCE_SENSOR_RAY_COLOR","PACMAN_FACING_INDICATOR_COLOR","PACMAN_GUESS_COLOR","PACMAN_PARTICLE_FILTER_COLOR","PACMAN_REPLAY_COLOR","PELLET_COLOR","SUPER_PELLET_COLOR","WALL_COLOR","PacmanStateRenderInfo","agent_setup","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","deref","deref_mut","deserialize","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","pacman_state","run_game","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","PhysicsRenderInfo","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","default","deref","deref_mut","deserialize","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","null_value","pacbot_pos","pacbot_pos_guess","pf_count","pf_points","primary_robot_rays","run_physics","serialize","sleep","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ReplayManager","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","playback_paused","playback_speed","playback_time","replay","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Transform","as_any","as_any_mut","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","inverse","is_in_subset","map_dist","map_point","map_wall","new_horizontal_padded","new_letterboxed","offset_x","offset_y","scale_x","scale_y","to_subset","to_subset_unchecked","transpose","try_from","try_into","type_id","vzip","centered_group","network_thread_main","start_network_thread","GROUP_ROBOT","GROUP_WALL","PacbotSimulation","as_any","as_any_mut","borrow","borrow_mut","broad_phase","cast_ray","ccd_solver","collider_set","default","deref","deref_mut","drop","from","from_subset","get_collider_position","get_primary_robot_collider","get_primary_robot_position","get_primary_robot_rays","impulse_joint_set","init","integration_parameters","into","into_any","into_any_arc","into_any_rc","is_in_subset","island_manager","multibody_joint_set","narrow_phase","new","null_value","particle_filter","particle_filter","pf_best_guess","pf_points","pf_update","physics_pipeline","primary_robot","query_pipeline","query_pipeline_updated","rigid_body_set","robot_specifications","robot_target_velocity","set_target_robot_velocity","step","step_target_velocity","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","ParticleFilter","ParticleFilterOptions","as_any","as_any","as_any_mut","as_any_mut","best_guess","best_guess","borrow","borrow","borrow_mut","borrow_mut","deref","deref","deref_mut","deref_mut","distance_sensor_diff","distance_sensor_ray","distance_sensors","drop","drop","elite","elitism_bias","from","from","from_subset","from_subset","genetic_rotation_limit","genetic_translation_limit","grid","init","init","into","into","into_any","into_any","into_any_arc","into_any_arc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","modify_point","new","options","points","points","points","purge","random","random_point","random_point_at","random_point_near","robot","spread","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_into","try_into","type_id","type_id","update","vzip","vzip","PacbotLocation","PacmanGameState","Replay","ReplayFrame","ReplayFrameData","agent_setup","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone_into","clone_into","clone_into","current_frame","current_frame","data","default","deref","deref","deref","deref_mut","deref_mut","deref_mut","deserialize","deserialize","deserialize","drop","drop","drop","frame_count","frames","from","from","from","from_bytes","from_subset","from_subset","from_subset","get_pacbot_location","get_pacman_state","go_to_beginning","go_to_end","init","init","init","into","into","into","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","is_at_beginning","is_at_end","is_in_subset","is_in_subset","is_in_subset","label","location_frame","new","null_value","pacman_state_frame","record_pacman_location","record_pacman_state","serialize","serialize","serialize","standard_grid","start_time","starting_at","step_back","step_backwards_until_pacman_state","step_forwards","step_forwards_until_pacman_state","time_to_next","time_to_previous","timestamp","to_bytes","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_into","try_into","try_into","type_id","type_id","type_id","update_current_frames","vzip","vzip","vzip","DistanceSensor","IMU","Motor","OmniWheel","Robot","as_any","as_any","as_any","as_any","as_any","as_any_mut","as_any_mut","as_any_mut","as_any_mut","as_any_mut","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","collider_radius","default","density","deref","deref","deref","deref","deref","deref_mut","deref_mut","deref_mut","deref_mut","deref_mut","distance_sensors","drop","drop","drop","drop","drop","eq","eq","eq","eq","eq","fmt","fmt","fmt","fmt","fmt","forward_direction","from","from","from","from","from","from_subset","from_subset","from_subset","from_subset","from_subset","imu","init","init","init","init","init","into","into","into","into","into","into_any","into_any","into_any","into_any","into_any","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_arc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","into_any_rc","is_in_subset","is_in_subset","is_in_subset","is_in_subset","is_in_subset","max_range","motors","noise_std","noise_std","null_value","radius","relative_direction","relative_position","relative_position","to_owned","to_owned","to_owned","to_owned","to_owned","to_subset","to_subset","to_subset","to_subset","to_subset","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","to_subset_unchecked","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","vzip","vzip","vzip","vzip","vzip","wheel","Blank","GRID_BLANK","GRID_OUTER","GRID_PACMAN","GRID_PLAYGROUND","Outer","Pacman","Playground","StandardGrid","as_any","as_any_mut","borrow","borrow_mut","clone","clone_into","compute_grid","deref","deref_mut","deserialize","drop","eq","equivalent","fmt","from","from_subset","get_all","get_default_pacbot_isometry","get_grid","get_outside_soft_boundaries","get_soft_boundaries","hash","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","serialize","to_owned","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","moving_average","stopwatch","MovingAverage","add_sample","as_any","as_any_mut","average","borrow","borrow_mut","deref","deref_mut","drop","first_samples","from","from_subset","index","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","new","num_samples","num_samples","samples","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip","Stopwatch","as_any","as_any_mut","average_process_time","average_segment_times","borrow","borrow_mut","deref","deref_mut","drop","from","from_subset","init","into","into_any","into_any_arc","into_any_rc","is_in_subset","last_segment_time","last_start_time","mark_segment","new","num_samples","process_moving_average","segment","segment_moving_averages","start","to_subset","to_subset_unchecked","try_from","try_into","type_id","vzip"],"q":[[0,"mdrc_pacbot_util"],[12,"mdrc_pacbot_util::agent_setup"],[89,"mdrc_pacbot_util::constants"],[100,"mdrc_pacbot_util::game_state"],[312,"mdrc_pacbot_util::grid"],[474,"mdrc_pacbot_util::gui"],[593,"mdrc_pacbot_util::gui::colors"],[606,"mdrc_pacbot_util::gui::game"],[636,"mdrc_pacbot_util::gui::physics"],[672,"mdrc_pacbot_util::gui::replay_manager"],[698,"mdrc_pacbot_util::gui::transforms"],[731,"mdrc_pacbot_util::gui::utils"],[732,"mdrc_pacbot_util::network"],[734,"mdrc_pacbot_util::physics"],[789,"mdrc_pacbot_util::physics::particle_filter"],[857,"mdrc_pacbot_util::replay"],[973,"mdrc_pacbot_util::robot"],[1124,"mdrc_pacbot_util::standard_grids"],[1169,"mdrc_pacbot_util::util"],[1171,"mdrc_pacbot_util::util::moving_average"],[1201,"mdrc_pacbot_util::util::stopwatch"],[1234,"core::any"],[1235,"core::result"],[1236,"serde::de"],[1237,"core::fmt"],[1238,"core::fmt"],[1239,"alloc::vec"],[1240,"alloc::alloc"],[1241,"alloc::boxed"],[1242,"alloc::sync"],[1243,"alloc::rc"],[1244,"anyhow"],[1245,"serde::ser"],[1246,"core::option"],[1247,"core::any"],[1248,"num_enum"],[1249,"parry2d::math"],[1250,"egui::ui"],[1251,"egui::context"],[1252,"egui::painter"],[1253,"alloc::string"],[1254,"nalgebra::geometry::isometry_alias"],[1255,"eframe::epi"],[1256,"std::sync::rwlock"],[1257,"std::sync::mpsc"],[1258,"std::sync::mpsc"],[1259,"std::sync::mutex"],[1260,"emath::pos2"],[1261,"egui::response"],[1262,"core::ops::function"],[1263,"rapier2d::geometry"],[1264,"parry2d::real"],[1265,"parry2d::math"],[1266,"rapier2d::dynamics::rigid_body_set"],[1267,"rapier2d::geometry::collider_set"],[1268,"rapier2d::pipeline::query_pipeline"],[1269,"bincode::error"],[1270,"core::time"],[1271,"core::hash"]],"d":["Static information needed to set up a Pacman game","Provides constants for the library.","Structs to define the state of a game of Pacman","Ghost behavior","Logical grid structs and utilities.","Top-level GUI elements and functionality.","Network communications with the Pico and the game server.","Handles all physics related operations","A utility for recording over time","Describes the physical features of a Robot","A set of pre-made general purpose grids","Some useful tools","Static information needed to set up a ghost for Pacman game","Static information needed to set up a Pacman game","","","","","","","","","","","","","The ghost’s color; determines behavior","","","","","","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","","","Get the position the ghosts go when eaten","This is the location where a ghost will reappear after …","Get the path that ghosts take upon respawning","The path that ghosts take upon respawning","Get the ghosts","The ghosts","Get the grid","The grid","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","Create a new PacmanGridSetup from a grid and a list of …","","Get the Pacman start point","The Pacman start point","The ghost’s scatter point; where it goes when it’s not …","","","The ghost’s starting path; where it goes when it first …","Get the times when ghosts swap between chase and scatter …","The times when ghosts swap between chase and scatter mode","","","","","","","","","","","","","","","Number of frames Pacman is invincible after eating a power …","Score for eating a ghost","The number of points displayed on the gui","The number of rigid bodies tracked by the ParticleFilter","The number of guesses tracked by ParticleFilter","The number of top guesses that are kept unchanged for the …","The number of worst guesses that are deleted and randomly …","The number of worst guesses that are deleted and randomly …","Score for eating a pellet","Score for eating a power pellet","Number of lives Pacman starts with","Information about a moving entity (Pacman or a ghost) …","Complicated behavior","Ghosts are chasing Pacman","Ghosts are frightened of Pacman","Information about a ghost during a game of Pacman","Current ghost behavior - applies to all ghosts","Ghost colors","Toggles between chasing Pacman and running away to his …","Information that changes during a game of Pacman","Aims for 4 tiles in front of Pacman","Directly chases Pacman","Ghosts are scattering to their respective corners","Location and direction","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Determines ghost behavior","","","","","","","","","","","","","","","","","Pacman dies","","Current facing direction","Get Euclidean distance between two points","","","","","","Number of frames that have passed since the start of the …","","","","","","","","","","","","","","","","If frightened, the amount of time remaining as frightened","Global time remaining for ghosts to be frightened","Bonus for capturing multiple ghosts in a power pellet","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","Frightened behavior - return a random legal move","","","","","Return the move closest to the space 4 tiles ahead of …","","","","","Ghosts","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","Test if the game is over (if all pellets are eaten)","","","","","","Whether we entered frightened mode or swapped states the …","Lives remaining - starts at 3; at 0, the game is over","The agent’s current location in the [<code>Grid</code>]","Current ghost behavior - applies to all ghosts","Create a new PacmanState from a PacmanAgentSetup","","Mode before the super pellet","Pacman’s location and direction","Pause the game","Whether the game is paused","Pellets remaining","Super pellets remaining","Ghost’s previous location","Reset the game state to the initial state using the same …","Respawn the ghosts and Pacman, for when Pacman dies","Time since last respawn","Resume the game","Player’s current game score","Teleport the ghost back to the home position, after it is …","","","","","","Should Pacman die this step?","Determines how ghosts follow their starting paths","Determines when the pre-programmed state swaps happen","Move forward one frame, using the current Pacman location","Have the ghost take one step","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Update Pacman’s location and direction","","","","","","","A <code>Grid</code> with precomputed data for faster pathfinding.","Enum for direction values.","Down, or -y","Height of a <code>Grid</code>.","Width of a <code>Grid</code>.","A 2D grid of <code>GridValue</code>s.","Enum for <code>Grid</code> cell values.","Wall","Left, or -x","Power pellet","Right, or +x","Up, or +y","A rectangle representing a wall.","","","","","","","","","Returns the <code>GridValue</code> at the given position, or <code>None</code> if …","","","","","","","","","Cherry position","","","","","","","","","Returns the index of the given position in the …","","","","","","","","","","","","","","Returns the distance between two points, or <code>None</code> if the …","note that all walkable nodes might not be reachable from …","","","","","Empty space","","","","","","","Find the direction from the start point to the end point","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","Get the associated rotation","Returns the underlying <code>Grid</code>.","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","The bottom left corner of the <code>Wall</code>.","Ghost chambers","Returns all the walkable neighbors of the given position.","Returns the <code>Point2</code> in the given direction from the given …","Return the walkable node from the nodes surrounding this …","Normal pellet","Returns the number of pellets in the grid.","","Returns the positions of all power pellets in the grid.","","The top right corner of the <code>Wall</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the valid actions for the given position.","walkable, right, left, up, down","Validates a <code>Grid</code>.","","","","","Returns whether this <code>GridValue</code> is walkable.","Returns the positions of all walkable nodes in the grid.","","Returns the <code>Wall</code>s in the grid.","walls represent rectangles with top left corner at the …","","Indicates the current meta-state of the app","Indicates whether the game state should be taken from our …","Playing information back from a file; no game server but …","Using a game server with physics engine and recording the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Draw the UI involved in recording/playback","","","","","","","","","","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","Load a replay from file","","Create a new ReplayManager; assumes that it is starting in …","","","","","A read-only reference to info needed to render physics.","","","","","","Records and replays GUI data","","When in playback mode, the position of pacbot from the …","","","Launches the GUI application. Blocks until the application …","","Save the current replay to file","","","","","","","","","","","Transforms between coordinate systems (such as …","","","","","","","","","","","Play back or save frames as necessary","","","Utilities for GUI layouts.","","","","","","","","","","","","","","","","","Stores state needed to render game state information","Initial positions of Pacman, ghosts, etc.","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Current game state","","","","","","","","","","Stores state needed to render physics information.","","","","","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","The current position of the robot.","The particle filter’s current best guess","The number of best particle filter points to save","The best pf_count particle filter points","An array of start and end points.","Thread where physics gets run.","","If true, the physics thread should not advance physics","","","","","","","","The public interface for recording and replaying GUI data","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","Whether playback is paused","Speed of playback - 0 is stopped, 1 is normal forwards","When current_frame was played; used to determine when to …","The current replay, which may be recording or playing back","","","","","","","A 2D transform consisting of per-axis scale and …","","","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","Returns the inverse <code>Transform</code>. Panics if the …","","Applies a scalar transformation","Applies the transformation to a point.","Returns the coordinates of the top left and bottom right …","Creates a new <code>Transform</code> that maps the rect <code>(src_p1, src_p2)</code>…","Creates a new <code>Transform</code> that maps the rect <code>(src_p1, src_p2)</code>…","","","","","","","Swaps the X and Y components of this <code>Transform</code>.","","","","","Render a sub-UI as a group that is horizontally centered …","The function that runs on the network thread.","Starts the network thread that communicates with the Pico …","Rapier interaction group representing all robots","Rapier interaction group representing all walls","Handles all physics related operations","","","","","","Cast a ray in the simulation","","","Creates a simulation with GRID_PACMAN, the default Robot, …","","","","Returns the argument unchanged.","","Get the <code>Isometry</code> for a given <code>ColliderHandle</code>","Get the collider for the primary robot","Get the current position of the primary robot","Get the rays coming out of the primary robot, representing …","","","","Calls <code>U::from(self)</code>.","","","","","","","","Create a new simulation on a ComputedGrid with a starting …","","Tracks the robot’s position over time","","Get the particle filter’s best guess position","Get the best ‘count’ particle filter points","Update the particle filter","","","","","","","","Set the target velocity (translational and rotational) for …","Update the physics simulation","Apply an impulse to the primary robot based on …","","","","","","","Tracks the robot’s position over time","Values that can be tweaked to improve the performance of …","","","","","Get the best guess","The current best guess","","","","","","","","","Given a location guess, measure the absolute difference …","Given a location guess, measure one sensor","Cross-thread reference to the current distance sensor …","","","The number of top guesses that are kept unchanged for the …","1 for no bias, greater than 1 for bias towards more elite …","Returns the argument unchanged.","Returns the argument unchanged.","","","","","The grid used to find empty spaces; to change this, create …","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","a small random translation and a small random rotation to …","Create a ParticleFilter","Values that can be tweaked to improve the performance of …","Get the best ‘count’ particle filter points","The total number of points tracked","Guesses for the current location, ordered by measured …","The number of worst guesses that are deleted and randomly …","The number of worst guesses that are deleted and randomly …","Generate a completely random walkable point","Generate a random valid point around a certain walkable …","","Robot specifications","Standard deviation of the distance from the current best …","","","","","","","","","","","Update the particle filter, using the same rigid body set …","","","Pacbot’s real physical location, as determined by the […","Information that changes frequently in Pacman, like ghost …","A collection of frames representing a full replay, along …","The metadata included in one frame of a <code>Replay</code>","The types of data that might be stored in a <code>ReplayFrame</code>","The agent setup the recording uses","","","","","","","","","","","","","","","","","","","Get the index of the current frame","Index of the most recently recorded or played frame","The data in the frame","","","","","","","","","","","","","","Get the number of frames","The data of the replay","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Create a new Replay using bytes from a file","","","","Returns the most recent PacbotLocation","Returns the most recent PacmanState","Go back to the beginning of the recording","Go to the end of the recording","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","Returns whether the replay is at the beginning","Returns whether the replay has played its last frame","","","","The name/label given to this replay (usually matches the …","Index of the most recently recorded or played pacman …","Start a new Replay","","Index of the most recently recorded or played pacman state …","Add a pacman location to the end of the replay","Add a pacman game state to the end of the replay","","","","The StandardGrid the recording uses","The time when recording started","Create a new Replay starting at the current frame in the …","Moves to the previous frame, if it exists","Step backwards until a PacmanState frame is reached","Moves to the next frame, if it exists","Step forwards until a PacmanState frame is reached","Get the amount of time until the next frame","Get the amount of time between the current and previous …","When the data was created","Get the bytes associated with the Replay","","","","","","","","","","","","","","","","","","","","","","","Represents a Distance Sensor on a <code>Robot</code>","Represents an Inertial Measurement Unit, usually an …","Represents a Motor on a <code>Robot</code>","Represents a single OmniWheel on a <code>Motor</code>","Represents the physical features of a Robot","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The physical radius of the robot that should collide with …","","The average density of the robot","","","","","","","","","","","All distance sensors on the robot","","","","","","","","","","","","","","","","The forward direction of the motor relative to the <code>Robot</code>","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","Returns the argument unchanged.","","","","","","The IMU present on the robot","","","","","","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","","","","","","","","","When the object is farther than this, the ray will be …","All motors attached to the robot","Standard deviation of the noise this sensor is expected to …","Standard deviation of the noise this sensor is expected to …","","Radius of the wheel","The (angle) direction of the sensor relative to the <code>Robot</code>","The position of the motor relative to the <code>Robot</code>","The position of the sensor relative to the <code>Robot</code>","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","The <code>OmniWheel</code> attached to this <code>Motor</code>","A (mostly) blank <code>Grid</code> - (1, 1) is walkable","A (mostly) blank <code>Grid</code> - (1, 1) is walkable","A <code>Grid</code> where the outermost path is empty","The official Pacbot <code>Grid</code>","A <code>Grid</code> with many smaller paths to practice maneuvering","A <code>Grid</code> where the outermost path is empty","The official Pacbot <code>Grid</code>","A <code>Grid</code> with many smaller paths to practice maneuvering","An enum to support egui grid selection","","","","","","","Get the <code>ComputedGrid</code> associated with this enum","","","","","","","","Returns the argument unchanged.","","Get a list of all available grids","Get the default Pacbot <code>Isometry2</code> associated with this enum","Get the <code>Grid</code> associated with this enum","Get the rectangles (in grid coordinates) that should be …","Get the part of the <code>Grid</code> that should actually show on the …","","","Calls <code>U::from(self)</code>.","","","","","","","","","","","","","Keeps track of the average of a frequently changing value","Keeps track of time elapsed for a process that may have …","Keeps track of the average of a frequently changing value","Adds a sample to the average","","","Returns the average of all samples","","","","","","Whether this is the first time through the array","Returns the argument unchanged.","","The current index in the samples array","","Calls <code>U::from(self)</code>.","","","","","Creates a new MovingAverage","Returns the number of samples in the average","The number of samples to keep in the average","The samples that have been added to the average","","","","","","","Keeps track of time elapsed for a process that may have …","","","Get the average time it is taking to complete the whole …","Get the average time it is taking to complete each segment","","","","","","Returns the argument unchanged.","","","Calls <code>U::from(self)</code>.","","","","","","","Mark a segment of the process","Creates a new Stopwatch","","","","","Mark the beginning of the process","","","","","",""],"i":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,2,2,3,2,3,2,3,3,3,3,3,3,3,3,3,2,3,2,3,2,3,2,3,2,3,2,3,3,3,3,3,2,2,3,2,3,3,2,3,2,3,2,3,2,3,2,3,2,3,2,3,0,0,0,0,0,0,0,0,0,0,0,0,27,26,26,0,0,0,27,0,27,27,26,29,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,25,26,27,28,29,25,26,27,28,29,25,29,25,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,25,29,28,29,26,27,28,29,25,25,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,29,25,25,26,27,28,29,25,26,27,28,29,25,29,29,29,29,29,29,29,29,29,29,25,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,25,26,27,28,29,25,25,25,28,25,25,25,25,25,25,25,25,25,29,25,25,29,25,25,29,26,27,28,29,25,25,25,25,25,29,26,27,28,29,25,26,27,28,29,25,26,27,28,29,25,26,26,27,27,28,29,25,26,27,26,27,28,29,25,26,27,28,29,25,25,25,25,26,27,28,29,25,0,0,13,0,0,0,0,33,13,33,13,13,0,13,33,34,15,13,33,34,15,15,13,33,34,15,13,33,34,15,33,13,33,34,15,13,33,34,15,15,15,13,33,34,15,13,33,34,15,13,33,34,15,15,15,13,33,34,15,33,13,33,34,15,13,33,0,13,33,34,15,13,33,34,15,13,33,34,15,13,15,15,13,33,34,15,13,33,34,15,13,33,34,15,13,33,34,15,13,33,34,15,13,33,34,15,34,33,15,15,15,33,15,15,15,15,34,13,33,34,15,13,33,34,15,13,33,34,15,13,33,34,15,13,13,33,33,34,15,15,13,33,13,33,34,15,13,33,34,15,15,15,0,13,33,34,15,33,15,15,15,15,0,0,0,41,41,40,38,38,38,40,41,38,40,41,38,40,41,38,40,41,40,41,40,41,0,38,38,40,41,38,40,41,38,38,38,38,0,38,40,41,40,41,40,41,38,40,41,38,40,41,0,38,38,38,40,41,38,40,41,38,40,41,40,41,38,40,41,38,40,41,38,38,38,38,38,38,38,38,38,0,38,38,0,0,38,38,38,38,0,38,38,38,38,40,41,38,40,41,38,40,41,0,38,40,41,38,40,41,38,40,41,38,38,38,38,0,38,40,41,0,0,0,0,0,0,0,0,0,0,0,0,0,0,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,52,0,52,52,52,52,52,52,52,52,0,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,0,56,56,56,56,56,56,56,56,56,0,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,50,0,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,0,0,0,0,0,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,63,0,0,73,68,73,68,68,68,73,68,73,68,73,68,73,68,68,68,68,73,68,73,73,73,68,73,68,73,73,68,73,68,73,68,73,68,73,68,73,68,73,68,68,68,68,68,73,68,73,73,68,68,68,68,73,73,68,73,68,73,68,73,68,73,68,68,73,68,74,74,0,0,0,76,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,76,76,75,76,74,75,76,74,75,76,74,75,76,74,75,76,76,76,74,75,76,76,74,75,76,76,76,76,76,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,76,76,74,75,76,76,76,76,76,76,76,76,74,75,76,76,76,76,76,76,76,76,76,76,75,76,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,74,75,76,76,74,75,76,0,0,0,0,0,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,58,58,58,80,81,82,72,58,80,81,82,72,58,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,82,80,81,82,72,58,80,81,82,72,58,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,72,58,80,72,58,81,72,82,72,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,80,81,82,72,58,82,48,0,0,0,0,48,48,48,0,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,0,0,0,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,84,0,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45],"f":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[2,2],[3,3],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],3],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[6,[2]]],7],[-1,[[6,[3]]],7],[5,4],[5,4],[[2,2],8],[[3,3],8],[[-1,-2],8,[],[]],[[2,9],10],[[3,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[3,[[4,[[12,[11]],13]]]],0,[3,[[14,[[4,[[12,[11]],13]]]]]],0,[3,[[14,[2]]]],0,[3,15],0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[-1,8,[]],[[15,[4,[[12,[11]],13]],[14,[2]],[14,[20]],[14,[[4,[[12,[11]],13]]]]],[[6,[3,21]]]],[[],-1,[]],[3,[[4,[[12,[11]],13]]]],0,0,[[2,-1],6,22],[[3,-1],6,22],0,[3,[[14,[20]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[25,3],4],[26,26],[27,27],[28,28],[29,29],[25,25],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],25],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[6,[26]]],7],[-1,[[6,[27]]],7],[-1,[[6,[28]]],7],[-1,[[6,[29]]],7],[-1,[[6,[25]]],7],[[25,3,8],4],[[[12,[11]],[12,[11]]],13],0,[[[12,[11]],[12,[11]]],30],[5,4],[5,4],[5,4],[5,4],[5,4],0,[[26,26],8],[[27,27],8],[[28,28],8],[[29,29],8],[[25,25],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[26,9],10],[[27,9],10],[[28,9],10],[[29,9],10],[[25,9],10],0,0,0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[29,31,15],[[12,[11]]]],[[29,[12,[11]],[12,[11]],15],[[12,[11]]]],[[29,[12,[11]],[12,[11]],13],[[12,[11]]]],[[29,[12,[11]],13,[12,[11]]],[[12,[11]]]],[[29,[12,[11]]],[[12,[11]]]],[[29,[12,[11]],13],[[12,[11]]]],[[29,[12,[11]]],[[12,[11]]]],[[29,2],[[12,[11]]]],[[29,3],[[23,[[12,[11]]]]]],[[29,3,20],[[23,[[12,[11]]]]]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[25,8],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,0,0,[3,25],[[],-1,[]],0,0,[25,4],0,0,0,0,[[25,3,8],4],[[25,3,8],4],0,[25,4],0,[[29,[4,[[12,[11]],13]]],4],[[26,-1],6,22],[[27,-1],6,22],[[28,-1],6,22],[[29,-1],6,22],[[25,-1],6,22],[[25,8],8],0,0,[[25,3,31,8],4],[[29,3,2,26,20,20,28,[12,[11]],31],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[11,[[6,[26,[32,[26]]]]]],[-1,[[6,[-2]]],[],[]],[11,[[6,[27,[32,[27]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[[],[[6,[26,[32,[26]]]]]],[[],[[6,[27,[32,[27]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[25,3,31],4],[[25,[12,[11]],13],4],[[25,15],4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[[15,[12,[11]]],[[23,[33]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[13,13],[33,33],[34,34],[15,15],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[15,[12,[11]]],[[23,[5]]]],0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[6,[13]]],7],[-1,[[6,[33]]],7],[-1,[[6,[34]]],7],[-1,[[6,[15]]],7],[[15,[12,[11]],[12,[11]]],[[23,[11]]]],0,[5,4],[5,4],[5,4],[5,4],0,[[13,13],8],[[33,33],8],[[34,34],8],[[15,15],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[[[12,[11]],[12,[11]]],13],[[13,9],10],[[33,9],10],[[34,9],10],[[15,9],10],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[13,[[35,[30]]]],[15,36],0,[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,[[15,[12,[11]]],[[14,[[12,[11]]]]]],[[15,[12,[11]],13],[[23,[[12,[11]]]]]],[[15,30,30],[[23,[[12,[11]]]]]],0,[15,20],0,[15,[[14,[[12,[11]]]]]],0,0,[[13,-1],6,22],[[33,-1],6,22],[[34,-1],6,22],[[15,-1],6,22],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[11,[[6,[13,[32,[13]]]]]],[-1,[[6,[-2]]],[],[]],[11,[[6,[33,[32,[33]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[36,[[6,[15]]]],[[],[[6,[13,[32,[13]]]]]],[[],[[6,[33,[32,[33]]]]]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[15,[12,[11]]],[[23,[[37,[8]]]]]],0,[36,[[6,[4,21]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[33,8],[15,[[14,[[12,[11]]]]]],0,[15,[[14,[34]]]],0,0,0,0,0,0,0,[[38,39],4],0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[40,40],[41,41],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],38],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[[38,42,43,44],4],[[38,42,43,44],4],[[38,42,39],4],[[38,43,44],4],[[45,42,46],4],[5,4],[5,4],[5,4],[[40,40],8],[[41,41],8],[[-1,-2],8,[],[]],[[-1,-2],8,[],[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[38,[[6,[4,21]]]],0,[[47,48,3,25,[49,[30]]],50],[[],-1,[]],0,0,0,0,0,0,0,0,[[],47],0,0,0,[38,4],0,[[],4],0,[38,[[6,[4,21]]]],0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[[38,42,51],4],[38,[[6,[4,21]]]],[[38,42],4],[38,4],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[52,52],[[-1,-2],4,[],[]],[5,-1,[]],[5,-1,[]],[-1,[[6,[52]]],7],[5,4],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],0,[[[18,[[53,[52]]]],[54,[[12,[11]]]],[55,[4]]],4],[[52,-1],6,22],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[56,56],[[-1,-2],4,[],[]],[[],56],[5,-1,[]],[5,-1,[]],[-1,[[6,[56]]],7],[5,4],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[[],-1,[]],0,0,0,0,0,[[[18,[[53,[56]]]],[18,[[53,[[4,[[57,[30]],30]]]]]],[55,[[12,[11]]]],[54,[[4,[48,58,[49,[30]]]]]],[18,[[59,[[14,[[23,[30]]]]]]]],[18,[[59,[45]]]],[18,[[59,[45]]]]],4],[[56,-1],6,22],0,[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,4],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],0,0,0,0,[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,4],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[43,43],[-1,8,[]],[[43,30],30],[[43,60],60],[[43,34],[[4,[60,60]]]],[[60,60,60,60],43],[[60,60,60,60],43],0,0,0,0,[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[43,43],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],[[39,-1],[[61,[-2]]],62,[]],[[],4],[[],4],0,0,0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[63,64,65],[[66,[65]]]],0,0,[[],63],[5,-1,[]],[5,-1,[]],[5,4],[-1,-1,[]],[-1,-2,[],[]],[[63,67],[[23,[[49,[30]]]]]],[63,67],[63,[[49,[30]]]],[63,[[14,[[4,[[66,[65]],[66,[65]]]]]]]],0,[[],5],0,[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],0,0,0,[[15,58,[49,[30]],[18,[[59,[[14,[[23,[30]]]]]]]]],63],[[],-1,[]],0,0,[63,[[49,[30]]]],[[63,5],[[14,[[49,[30]]]]]],[[63,[12,[11]],[18,[[59,[45]]]]],4],0,0,0,0,0,0,0,[[63,[4,[[57,[30]],30]]],4],[63,4],[63,4],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[68,[[49,[30]]]],0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[[58,[49,[30]],[14,[[23,[30]]]],69,70,71],30],[[[49,[30]],72,69,70,71],30],0,[5,4],[5,4],0,0,[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[-1,8,[]],[[68,[49,[30]]],[[49,[30]]]],[[15,58,[49,[30]],[18,[[59,[[14,[[23,[30]]]]]]]],73],68],0,[[68,5],[[14,[[49,[30]]]]]],0,0,0,0,[68,[[49,[30]]]],[[68,[12,[11]],31],[[49,[30]]]],[[68,[12,[11]]],[[49,[30]]]],0,0,[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[[68,[12,[11]],69,70,71,[18,[[59,[45]]]]],4],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[74,74],[75,75],[76,76],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[76,5],0,0,[[],76],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[-1,[[6,[74]]],7],[-1,[[6,[75]]],7],[-1,[[6,[76]]],7],[5,4],[5,4],[5,4],[76,5],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[[[77,[11]]],[[6,[76,78]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[76,[[49,[30]]]],[76,25],[76,4],[76,4],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[76,8],[76,8],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,[[47,48,3,25,[49,[30]]],76],[[],-1,[]],0,[[76,[49,[30]]],[[6,[4,21]]]],[[76,25],[[6,[4,21]]]],[[74,-1],6,22],[[75,-1],6,22],[[76,-1],6,22],0,0,[76,76],[76,4],[76,4],[76,4],[76,4],[76,79],[76,79],0,[76,[[6,[[14,[11]],78]]]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[76,4],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[80,80],[81,81],[82,82],[72,72],[58,58],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],[[-1,-2],4,[],[]],0,[[],58],0,[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],[5,-1,[]],0,[5,4],[5,4],[5,4],[5,4],[5,4],[[80,80],8],[[81,81],8],[[82,82],8],[[72,72],8],[[58,58],8],[[80,9],10],[[81,9],10],[[82,9],10],[[72,9],10],[[58,9],10],0,[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,[[],5],[[],5],[[],5],[[],5],[[],5],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],[-1,8,[]],0,0,0,0,[[],-1,[]],0,0,0,0,[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,24,[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],[-1,-2,[],[]],0,0,0,0,0,0,0,0,0,0,[-1,1,[]],[-1,1,[]],[-1,-2,[],[]],[-1,-2,[],[]],[48,48],[[-1,-2],4,[],[]],[48,15],[5,-1,[]],[5,-1,[]],[-1,[[6,[48]]],7],[5,4],[[48,48],8],[[-1,-2],8,[],[]],[[48,9],10],[-1,-1,[]],[-1,-2,[],[]],[[],[[14,[48]]]],[48,[[49,[30]]]],[48,36],[48,[[14,[[4,[60,60]]]]]],[48,[[4,[60,60]]]],[[48,-1],4,83],[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[[48,-1],6,22],[-1,-2,[],[]],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,0,0,[[84,30],4],[-1,1,[]],[-1,1,[]],[84,30],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,4],0,[-1,-1,[]],[-1,-2,[],[]],0,[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],[5,84],[84,5],0,0,[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]],0,[-1,1,[]],[-1,1,[]],[45,30],[45,[[14,[[4,[47,30]]]]]],[-1,-2,[],[]],[-1,-2,[],[]],[5,-1,[]],[5,-1,[]],[5,4],[-1,-1,[]],[-1,-2,[],[]],[[],5],[-1,-2,[],[]],[[[17,[-1,16]]],[[17,[1,16]]],[]],[[[18,[-1,16]]],[[18,[1,16]]],[]],[[[19,[-1,16]]],[[19,[1,16]]],[]],[-1,8,[]],0,0,[[45,46],4],[5,45],0,0,0,0,[45,4],[-1,[[23,[-2]]],[],[]],[-1,-2,[],[]],[-1,[[6,[-2]]],[],[]],[-1,[[6,[-2]]],[],[]],[-1,24,[]],[-1,-2,[],[]]],"c":[],"p":[[8,"Any",1234],[3,"GhostSetup",12],[3,"PacmanAgentSetup",12],[15,"tuple"],[15,"usize"],[4,"Result",1235],[8,"Deserializer",1236],[15,"bool"],[3,"Formatter",1237],[6,"Result",1237],[15,"u8"],[6,"Point2",1238],[4,"Direction",312],[3,"Vec",1239],[3,"ComputedGrid",312],[3,"Global",1240],[3,"Box",1241],[3,"Arc",1242],[3,"Rc",1243],[15,"u32"],[3,"Error",1244],[8,"Serializer",1245],[4,"Option",1246],[3,"TypeId",1234],[3,"PacmanState",100],[4,"GhostMode",100],[4,"GhostType",100],[3,"Agent",100],[3,"Ghost",100],[15,"f32"],[3,"ThreadRng",1247],[3,"TryFromPrimitiveError",1248],[4,"GridValue",312],[3,"Wall",312],[6,"Rotation",1249],[6,"Grid",312],[15,"array"],[3,"App",474],[3,"Ui",1250],[4,"GameServer",474],[4,"AppMode",474],[3,"Context",1251],[3,"Transform",698],[3,"Painter",1252],[3,"Stopwatch",1201],[15,"str"],[3,"String",1253],[4,"StandardGrid",1124],[6,"Isometry2",1254],[3,"ReplayManager",672],[3,"Frame",1255],[3,"PacmanStateRenderInfo",606],[3,"RwLock",1256],[3,"Receiver",1257],[3,"Sender",1257],[3,"PhysicsRenderInfo",636],[6,"Vector2",1258],[3,"Robot",973],[3,"Mutex",1259],[3,"Pos2",1260],[3,"InnerResponse",1261],[8,"FnOnce",1262],[3,"PacbotSimulation",734],[6,"Ray",1263],[6,"Real",1264],[6,"Point",1249],[3,"ColliderHandle",1265],[3,"ParticleFilter",789],[3,"RigidBodySet",1266],[3,"ColliderSet",1267],[3,"QueryPipeline",1268],[3,"DistanceSensor",973],[3,"ParticleFilterOptions",789],[4,"ReplayFrameData",857],[3,"ReplayFrame",857],[3,"Replay",857],[15,"slice"],[6,"Error",1269],[3,"Duration",1270],[3,"IMU",973],[3,"OmniWheel",973],[3,"Motor",973],[8,"Hasher",1271],[3,"MovingAverage",1171]]}\
}');
if (typeof window !== 'undefined' && window.initSearch) {window.initSearch(searchIndex)};
if (typeof exports !== 'undefined') {exports.searchIndex = searchIndex};
